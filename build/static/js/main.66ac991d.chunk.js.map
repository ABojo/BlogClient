{"version":3,"sources":["components/Navbar.js","components/Post.js","components/Loader.js","utils/formatDate.js","components/PostList.js","components/Message.js","components/CommentSection.js","components/FullPost.js","components/App.js","index.js"],"names":["Navbar","className","to","href","Post","props","title","body","author","stamp","url","Loader","formatDate","timestamp","ts","Date","getMonth","getDate","getFullYear","buildPosts","posts","JSON","parse","reverse","map","post","_id","length","slice","getPosts","stateSetter","a","fetch","raw","json","stringify","data","PostList","useState","setPosts","Message","text","color","success","postComment","postId","name","method","headers","comment","CommentSection","comments","setComments","commentName","setCommentName","commentBody","setCommentBody","popUpMessage","setPopUpMessage","popUpStatus","setPopUpStatus","setPopUp","message","status","onAddComment","Fragment","onChange","e","currentTarget","value","type","placeholder","required","onClick","class","com","getPost","id","buildPost","FullPost","setPost","useParams","App","basename","process","exact","path","children","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.66ac991d.chunk.js","sourcesContent":["import { Link } from 'react-router-dom';\r\n\r\nfunction Navbar() {\r\n  return (\r\n    <div className=\"flex flex-row items-baseline justify-between px-5 py-5 border-b border-grey-100 mb-10\">\r\n      <Link to=\"/\" className=\"text-3xl\">\r\n        Blog Client\r\n      </Link>\r\n      <a\r\n        href=\"https://github.com/ABojo/BlogClient\"\r\n        className=\"text-3xl font-bold text-blue-500\"\r\n      >\r\n        <i className=\"fab fa-github text-blue-500 bg-blue-100 p-4 rounded-full\"></i>\r\n      </a>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import { Link } from 'react-router-dom';\r\n\r\nfunction Post(props) {\r\n  const { title, body, author, stamp, url } = props;\r\n  return (\r\n    <div className=\"container mb-10 border-l-8 border-blue-500 px-8\">\r\n      <Link to={url} className=\"font-bold text-3xl mb-3 block\">\r\n        {title}\r\n      </Link>\r\n      <p className=\"text-gray-500 mb-3\">{body}</p>\r\n      <p className=\"text-gray-400 text-sm mb-3 block\">{`${author} Â· ${stamp}`}</p>\r\n      <Link\r\n        to={url}\r\n        className=\"\t\tbg-green-100\r\n\t\t\thover:bg-green-200\r\n\t\t\ttransition\r\n\t\t\tduration-200\r\n\t\t\tp-3\r\n\t\t\trounded\r\n\t\t\ttext-green-900\r\n\t\t\tfont-bold\r\n\t\t\ttext-sm\r\n      inline-block\"\r\n      >\r\n        Read More\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Post;\r\n","function Loader() {\r\n  return (\r\n    <div className=\"lds-ring mt-10\">\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Loader;\r\n","const formatDate = (timestamp) => {\r\n  const ts = new Date(timestamp);\r\n  return `${ts.getMonth() + 1}/${ts.getDate()}/${ts.getFullYear()}`;\r\n};\r\n\r\nexport default formatDate;\r\n","import { useState } from 'react';\r\nimport Post from './Post';\r\nimport Loader from './Loader';\r\nimport formatDate from '../utils/formatDate';\r\n\r\nconst buildPosts = (posts) => {\r\n  return JSON.parse(posts)\r\n    .reverse()\r\n    .map((post) => {\r\n      const { body, timestamp } = post;\r\n      return (\r\n        <Post\r\n          url={`/posts/${post._id}`}\r\n          title={post.title}\r\n          body={`${body.length > 200 ? body.slice(0, 200) : body}...`}\r\n          author={post.author}\r\n          stamp={formatDate(timestamp)}\r\n        />\r\n      );\r\n    });\r\n};\r\n\r\nconst getPosts = async (stateSetter) => {\r\n  const raw = await fetch('https://odingblogapi.herokuapp.com/api/posts');\r\n  const json = await raw.json();\r\n\r\n  stateSetter(JSON.stringify(json.data.posts));\r\n};\r\n\r\nfunction PostList() {\r\n  const [posts, setPosts] = useState('');\r\n\r\n  //Run async function that will call setPosts with the retrieved data\r\n  getPosts(setPosts);\r\n\r\n  return <div>{posts ? buildPosts(posts) : <Loader />}</div>;\r\n}\r\n\r\nexport default PostList;\r\n","function Message(props) {\r\n  const { text, success } = props;\r\n  const color = success ? 'green' : 'red';\r\n\r\n  return (\r\n    <div className={`p-5 w-full bg-${color}-100 rounded mb-10`}>\r\n      <h1 className={`text-${color}-900`}>{text}</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Message;\r\n","import React from 'react';\r\nimport formatDate from '../utils/formatDate';\r\nimport { useState } from 'react';\r\nimport Message from './Message';\r\n\r\nconst postComment = async (postId, name, body) => {\r\n  const raw = await fetch('https://odingblogapi.herokuapp.com/api/comments/', {\r\n    method: 'POST',\r\n    body: JSON.stringify({ postId, name, body }),\r\n    headers: {\r\n      'Content-type': 'application/json; charset=UTF-8',\r\n    },\r\n  });\r\n\r\n  const json = await raw.json();\r\n  return json.data.comment;\r\n};\r\n\r\nfunction CommentSection(props) {\r\n  const { postId } = props;\r\n  const [comments, setComments] = useState(props.comments);\r\n  const [commentName, setCommentName] = useState('');\r\n  const [commentBody, setCommentBody] = useState('');\r\n  const [popUpMessage, setPopUpMessage] = useState('');\r\n  const [popUpStatus, setPopUpStatus] = useState(false);\r\n\r\n  const setPopUp = (message, status) => {\r\n    setPopUpStatus(status);\r\n    setPopUpMessage(message);\r\n  };\r\n\r\n  const clearCommentFields = () => {\r\n    setCommentBody('');\r\n    setCommentName('');\r\n  };\r\n\r\n  const onAddComment = async () => {\r\n    if (commentName && commentBody) {\r\n      const comment = await postComment(postId, commentName, commentBody);\r\n\r\n      clearCommentFields();\r\n      setPopUp('Your comment has been successfully posted!', true);\r\n\r\n      setComments([...comments, comment]);\r\n    } else {\r\n      setPopUp('Sorry, you must fill out both fields first!', false);\r\n    }\r\n  };\r\n\r\n  const buildCommentBox = () => {\r\n    return (\r\n      <div className=\"bg-gray-100 p-5 mb-10 rounded\">\r\n        <div className=\"mx-auto\">\r\n          <input\r\n            onChange={(e) => {\r\n              setCommentName(e.currentTarget.value);\r\n            }}\r\n            value={commentName}\r\n            type=\"text\"\r\n            placeholder=\"Enter your name\"\r\n            className=\"px-5 py-5 rounded shadow-inner resize-none w-full text-sm block mb-3\"\r\n            required\r\n          />\r\n          <textarea\r\n            onChange={(e) => {\r\n              setCommentBody(e.currentTarget.value);\r\n            }}\r\n            value={commentBody}\r\n            placeholder=\"Enter a comment\"\r\n            className=\"px-5 py-5 rounded shadow-inner resize-none w-full text-sm block mb-3\"\r\n            required\r\n          />\r\n          <input\r\n            onClick={onAddComment}\r\n            type=\"submit\"\r\n            value=\"Add Comment\"\r\n            className=\"rounded font-bold bg-blue-100 hover:bg-blue-200 text-blue-900 p-3 text-sm cursor-pointer transition duration-200 shadow block ml-auto\"\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const buildCommentList = () => {\r\n    return (\r\n      <div class=\"mb-10\">\r\n        <h1 class=\"text-3xl mb-3 text-gray-900\">\r\n          Comments ({comments.length})\r\n        </h1>\r\n        {comments\r\n          .map((com) => {\r\n            return (\r\n              <div className=\"border-l-8 border-blue-500 px-8 mb-3\">\r\n                <h1 class=\"text-xl text-gray-900\">{com.name}</h1>\r\n                <h1 class=\"text-gray-500 text-lg mb-3\">{com.body}</h1>\r\n                <h1 class=\"text-gray-400\">{formatDate(com.timestamp)}</h1>\r\n              </div>\r\n            );\r\n          })\r\n          .reverse()}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {buildCommentBox()}\r\n      {popUpMessage && <Message text={popUpMessage} success={popUpStatus} />}\r\n      {buildCommentList()}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default CommentSection;\r\n","import { useParams } from 'react-router-dom';\r\nimport React, { useState } from 'react';\r\nimport Loader from './Loader';\r\nimport formatDate from '../utils/formatDate';\r\nimport CommentSection from './CommentSection';\r\n\r\nconst getPost = async (id, stateSetter) => {\r\n  const raw = await fetch(`https://odingblogapi.herokuapp.com/api/posts/${id}`);\r\n  const json = await raw.json();\r\n\r\n  stateSetter(JSON.stringify(json.data.post));\r\n};\r\n\r\nconst buildPost = (post) => {\r\n  const { title, body, author, timestamp } = JSON.parse(post);\r\n  return (\r\n    <div className=\"mb-10\">\r\n      <h1 className=\"text-4xl font-bold mb-3\">{title}</h1>\r\n      <h2 className=\"text-gray-400 text-md mb-3\">\r\n        {author} Â· {formatDate(timestamp)}\r\n      </h2>\r\n      <p className=\"text-gray-500 text-xl\">{body}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction FullPost() {\r\n  const [post, setPost] = useState('');\r\n  const { id } = useParams();\r\n\r\n  getPost(id, setPost);\r\n\r\n  return (\r\n    <div>\r\n      {post ? (\r\n        <React.Fragment>\r\n          {buildPost(post)}\r\n          <CommentSection comments={JSON.parse(post).comments} postId={id} />\r\n        </React.Fragment>\r\n      ) : (\r\n        <Loader />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FullPost;\r\n","import Navbar from './Navbar';\nimport PostList from './PostList';\nimport FullPost from './FullPost';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <div className=\"container mx-auto max-w-3xl p-5\">\n      <Router basename={process.env.PUBLIC_URL}>\n        <Navbar />\n        <Route exact path=\"/\" children={<PostList />} />\n        <Route exact path=\"/posts/:id\" children={<FullPost />} />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './css/styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}